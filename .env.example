# ==============================================================================
# MEMORY TRACKER - DOCKER ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file provides example environment variables for running the Memory Tracker
# application with Docker. Copy this file to .env and update the values for your
# deployment.

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
# Database connection URL - PostgreSQL is used in Docker setup
# Format: postgresql+asyncpg://username:password@host:port/database
DATABASE_URL=postgresql+asyncpg://memory_tracker_user:memory_tracker_password@db:5432/memory_tracker

# PostgreSQL database configuration (used by Docker Compose)
POSTGRES_DB=memory_tracker
POSTGRES_USER=memory_tracker_user
POSTGRES_PASSWORD=memory_tracker_password

# ==============================================================================
# GITHUB OAUTH CONFIGURATION
# ==============================================================================
# GitHub OAuth app credentials for user authentication
# Create a GitHub OAuth app at: https://github.com/settings/applications/new
GITHUB_CLIENT_ID=your_github_client_id_here
GITHUB_CLIENT_SECRET=your_github_client_secret_here

# OAuth redirect URI - update with your domain
OAUTH_REDIRECT_URI=http://localhost:3000/auth/callback

# Secret key for OAuth state parameter - change in production
OAUTH_STATE_SECRET=your-secret-key-change-me-in-production

# ==============================================================================
# ADMIN AUTHENTICATION
# ==============================================================================
# Initial admin username (REQUIRED)
# This user will be created with admin privileges during database initialization
ADMIN_INITIAL_USERNAME=your_github_username

# ==============================================================================
# API SERVER CONFIGURATION
# ==============================================================================
# API server host and port
API_HOST=0.0.0.0
API_PORT=8000

# CORS origins - comma-separated list of allowed origins
CORS_ORIGINS=http://localhost:3000,http://localhost:9002

# ==============================================================================
# FRONTEND CONFIGURATION
# ==============================================================================
# Frontend API base URL - should point to your backend
NEXT_PUBLIC_API_BASE=http://localhost:8000

# ==============================================================================
# WORKER AUTHENTICATION
# ==============================================================================
# Authentication token for worker operations (optional)
# Alternative to using --auth-token command line argument
# Generate using: python backend/scripts/manage_tokens.py create "Worker Name"
MEMORY_TRACKER_TOKEN=your_worker_token_here